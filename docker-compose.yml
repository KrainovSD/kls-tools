version: "2.1"
services:
  nginx:
    image: nginx:1.26
    ports:
      - 80:80
      - 443:443
    volumes:
      - ./nginx/test:/usr/share/nginx/html
      - ./nginx/httpConfigs:/etc/nginx/conf.d
      - ./nginx/streamConfigs:/etc/nginx/conf.s
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
    networks:
      - backend

  rabbitmq:
    image: rabbitmq:3.10.7-management
    hostname: rabbitmq
    restart: unless-stopped
    env_file:
      - ./rabbitmq/.env.rabbitmq
    environment:
      - RABBITMQ_SERVER_ADDITIONAL_ERL_ARGS=-rabbit log_levels [{connection,error},{default,error}] disk_free_limit 2147483648
    volumes:
      - ./rabbitmq:/var/lib/rabbitmq
    ports:
      - 15672:15672
      - 5672:5672
    networks:
      - backend

  redis:
    image: redis:7.2.5
    restart: unless-stopped
    env_file:
      - ./redis/.env.redis
    command: /bin/sh -c "redis-server --save 900 1 300 10 60 10000 --loglevel warning --maxmemory 512mb  --requirepass $$REDIS_PASSWORD"
    volumes:
      - ./redis:/root/redis
    # ports:
    #   - "6379:6379"
    networks:
      - backend

  postgres:
    image: postgres:15.6
    command:
      - "postgres"
      - "-c"
      - "config_file=/etc/postgresql.conf"
    env_file:
      - ./postgres/.env.postgres
    volumes:
      - ./postgres/data:/var/lib/postgresql/data
      - ./postgres/postgres.conf:/etc/postgresql.conf:ro
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U $$POSTGRES_USER -d $$POSTGRES_DB"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 10s
    deploy:
      resources:
        limits:
          cpus: "0.20"
          memory: 500M
        # reservations:
        #   cpus: "0.25"
        #   memory: 200M
    restart: unless-stopped
    # ports:
    #   - "5432:5432"
    networks:
      - postgres
      - backend

  pgadmin:
    image: dpage/pgadmin4:7.2
    env_file:
      - ./postgres/.env.pgadmin
    volumes:
      - ./postgres/adminData:/var/lib/pgadmin
    ports:
      - "5050:80"
    restart: unless-stopped
    deploy:
      resources:
        limits:
          cpus: "0.20"
          memory: 500M
    networks:
      - postgres

  minio:
    image: minio/minio:RELEASE.2024-06-22T05-26-45Z
    command: server --console-address ":9001" /data/
    env_file:
      - ./minio/.env.minio
    environment:
      - MINIO_BROWSER_REDIRECT_URL=http://krainovservice.ru/minio/ui
    # ports:
    #   - "9000:9000"
    #   - "9001:9001"
    volumes:
      - ./minio/data:/data
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9000/minio/health/live"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 10s
    networks:
      - backend

  jaeger:
    image: jaegertracing/all-in-one:1.44
    ports:
      - 16686:16686
      - 4317:4317
      - 4318:4318
      - 6832:6832
    environment:
      - COLLECTOR_OTLP_ENABLED=true
    networks:
      - backend

networks:
  postgres:
    driver: bridge
  backend:
    external: true
